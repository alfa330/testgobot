from aiogram import Bot, Dispatcher, types
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
from aiogram.utils import executor
from flask import Flask
import os
import asyncio
import logging

# Initialize Flask app for Render keep-alive
app = Flask(__name__)

@app.route('/')
def home():
    return "TestGo Bot is running!"

# Initialize aiogram bot
bot = Bot(token=os.getenv("TELEGRAM_BOT_TOKEN"))
dp = Dispatcher(bot)
logging.basicConfig(level=logging.INFO)

# Welcome message and age verification
@dp.message_handler(commands=['start'])
async def send_welcome(message: types.Message):
    welcome_text = (
        "<b>–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ TestGo! üö¥‚Äç‚ôÇÔ∏è</b>\n"
        "–ê—Ä–µ–Ω–¥–∞ —ç–ª–µ–∫—Ç—Ä–æ–≤–µ–ª–æ—Å–∏–ø–µ–¥–æ–≤ –¥–ª—è —Ä–∞–±–æ—Ç—ã –∏ —Å–≤–æ–±–æ–¥—ã –ø–µ—Ä–µ–¥–≤–∏–∂–µ–Ω–∏—è!\n\n"
        "<b>–í–∞–º –µ—Å—Ç—å 18 –ª–µ—Ç?</b>"
    )
    keyboard = InlineKeyboardMarkup()
    keyboard.add(InlineKeyboardButton("–î–∞", callback_data="age_yes"))
    keyboard.add(InlineKeyboardButton("–ù–µ—Ç", callback_data="age_no"))
    await message.answer(welcome_text, parse_mode="HTML", reply_markup=keyboard)

# Handle age verification response
@dp.callback_query_handler(lambda c: c.data in ["age_yes", "age_no"])
async def process_age(callback_query: types.CallbackQuery):
    await callback_query.message.delete()  # Remove previous message
    if callback_query.data == "age_no":
        await callback_query.message.answer(
            "<b>–ò–∑–≤–∏–Ω–∏—Ç–µ! üòî</b>\n–ê—Ä–µ–Ω–¥–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –¥–ª—è –ª–∏—Ü —Å—Ç–∞—Ä—à–µ 18 –ª–µ—Ç.",
            parse_mode="HTML"
        )
    else:
        options_text = (
            "<b>–ß—Ç–æ –≤–∞—Å –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç? üö¥‚Äç‚ôÇÔ∏è</b>\n"
            "–í—ã–±–µ—Ä–∏—Ç–µ –æ–¥–Ω—É –∏–∑ –æ–ø—Ü–∏–π –Ω–∏–∂–µ:"
        )
        keyboard = InlineKeyboardMarkup()
        keyboard.add(InlineKeyboardButton("–ê—Ä–µ–Ω–¥–∞ –≤–µ–ª–æ—Å–∏–ø–µ–¥–∞", callback_data="rent_bike"))
        keyboard.add(InlineKeyboardButton("–ü–æ–º–æ—â—å —Å –≤–µ–ª–æ—Å–∏–ø–µ–¥–æ–º", callback_data="bike_help"))
        await callback_query.message.answer(options_text, parse_mode="HTML", reply_markup=keyboard)

# Handle user selection (rent or help)
@dp.callback_query_handler(lambda c: c.data in ["rent_bike", "bike_help"])
async def process_selection(callback_query: types.CallbackQuery):
    await callback_query.message.delete()  # Remove previous message
    if callback_query.data == "rent_bike":
        rent_text = (
            "<b>–≠–ª–µ–∫—Ç—Ä–æ–≤–µ–ª–æ—Å–∏–ø–µ–¥ –≤ –∞—Ä–µ–Ω–¥—É –¥–ª—è –∫—É—Ä—å–µ—Ä–æ–≤ ‚Äî –∑–∞—Ä–∞–±–∞—Ç—ã–≤–∞–π –±–æ–ª—å—à–µ, —Ç—Ä–∞—Ç—å –º–µ–Ω—å—à–µ! üö¥‚Äç‚ôÇÔ∏è</b>\n\n"
            "–†–∞–±–æ—Ç–∞–µ—à—å –≤ –¥–æ—Å—Ç–∞–≤–∫–µ? –•–æ—á–µ—à—å —É–≤–µ–ª–∏—á–∏—Ç—å –¥–æ—Ö–æ–¥ –∏ —Å–æ–∫—Ä–∞—Ç–∏—Ç—å —Ä–∞—Å—Ö–æ–¥—ã?\n"
            "<b>–ê—Ä–µ–Ω–¥—É–π —ç–ª–µ–∫—Ç—Ä–æ–≤–µ–ª–æ—Å–∏–ø–µ–¥ –≤—Å–µ–≥–æ –∑–∞ 20 900 ‚Ç∏ –≤ –Ω–µ–¥–µ–ª—é</b> –∏ –∑–∞–±—É–¥—å –æ –ø—Ä–æ–±–∫–∞—Ö, —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–µ –∏ –ª–∏—à–Ω–∏—Ö –∑–∞—Ç—Ä–∞—Ç–∞—Ö!\n\n"
            "<b>–í –∫–æ–º–ø–ª–µ–∫—Ç –≤—Ö–æ–¥–∏—Ç –≤—Å—ë, —á—Ç–æ –Ω—É–∂–Ω–æ –¥–ª—è —Ä–∞–±–æ—Ç—ã –±–µ–∑ –æ—Å—Ç–∞–Ω–æ–≤–æ–∫:</b>\n"
            "‚úÖ –ù–∞–¥—ë–∂–Ω—ã–π —ç–ª–µ–∫—Ç—Ä–æ–≤–µ–ª–æ—Å–∏–ø–µ–¥ ‚Äî –ª—ë–≥–∫–∏–π, –º–∞–Ω—ë–≤—Ä–µ–Ω–Ω—ã–π –∏ —É–¥–æ–±–Ω—ã–π\n"
            "‚úÖ 2 –∞–∫–∫—É–º—É–ª—è—Ç–æ—Ä–∞ ‚Äî –¥–æ 140 –∫–º –Ω–∞ –æ–¥–Ω–æ–π —Å–º–µ–Ω–µ\n"
            "‚úÖ 2 –∑–∞—Ä—è–¥–∫–∏ ‚Äî –∑–∞—Ä—è–∂–∞–π –¥–æ–º–∞ –∑–∞ 4 —á–∞—Å–∞\n"
            "‚úÖ –ü—Ä–æ—á–Ω—ã–π –∑–∞–º–æ–∫ ‚Äî —Ç–≤–æ–π –±–∞–π–∫ –≤—Å–µ–≥–¥–∞ –≤ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏\n\n"
            "<b>–ò–¥–µ–∞–ª—å–Ω–æ –¥–ª—è:</b> –Ø–Ω–¥–µ–∫—Å.–ï–¥–∞, Glovo, Wolt –∏ –¥—Ä.\n"
            "üî• –ë–µ–∑ –∑–∞–ª–æ–≥–∞\n"
            "üî• –ë—ã—Å—Ç—Ä–∞—è –≤—ã–¥–∞—á–∞\n"
            "üî• –ù–∞–¥—ë–∂–Ω–∞—è —Ç–µ—Ö–Ω–∏–∫–∞\n"
            "üî• –ü–æ–¥–¥–µ—Ä–∂–∫–∞ 24/7\n"
            "üî• –®–∏—Ä–æ–∫–∏–π –∞—Å—Å–æ—Ä—Ç–∏–º–µ–Ω—Ç –∞–∫—Å–µ—Å—Å—É–∞—Ä–æ–≤ (—à–ª–µ–º—ã, –ø–µ—Ä—á–∞—Ç–∫–∏, –∑–∞—â–∏—Ç–∞ –∏ —Ç.–¥.) –Ω–∞ –ø—É–Ω–∫—Ç–µ –≤—ã–¥–∞—á–∏ –ø–æ –∞–¥—Ä–µ—Å—É: <b>–°–∞—Ç–ø–∞–µ–≤–∞ 35–ê (9:00-19:00)</b>\n\n"
            "<b>–í—ã–∫—É–ø —ç–ª–µ–∫—Ç—Ä–æ–≤–µ–ª–æ—Å–∏–ø–µ–¥–∞ –≤ –ê–ª–º–∞—Ç—ã:</b>\n"
            "üö¥‚Äç‚ôÇÔ∏è –ó–∞–±–µ—Ä–∏ —Å–≤–æ–π —ç–ª–µ–∫—Ç—Ä–æ–≤–µ–ª–∏–∫ ‚Äî —Ä–∞–±–æ—Ç–∞–π –∏ –≤—ã–∫—É–ø–∞–π!\n"
            "<b>üìç –ì–¥–µ –≤–∑—è—Ç—å?</b> –°–∞—Ç–ø–∞–µ–≤–∞ 35–ê, –æ—Ñ–∏—Å Eazy Go\n"
            "<b>üí∞ –£—Å–ª–æ–≤–∏—è:</b>\n"
            "‚Ä¢ –í—Å–µ–≥–æ 37 500 ‚Ç∏ –≤ –Ω–µ–¥–µ–ª—é\n"
            "‚Ä¢ –í—ã–∫—É–ø –∑–∞ 5 –º–µ—Å—è—Ü–µ–≤ ‚Äî –∏ —ç–ª–µ–∫—Ç—Ä–æ–≤–µ–ª–∏–∫ —Ç–≤–æ–π!\n"
            "‚Ä¢ –ú–æ—â–Ω—ã–π, —Å 2 –∞–∫–∫—É–º—É–ª—è—Ç–æ—Ä–∞–º–∏ –∏ –ø–æ–ª–Ω–æ–π –∫–æ–º–ø–ª–µ–∫—Ç–∞—Ü–∏–µ–π üîãüîã\n"
            "‚ö°Ô∏è –†–∞–±–æ—Ç–∞–π –±–µ–∑ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π –≤ —Ç–∞—Ä–∏—Ñ–∞—Ö –ö—É—Ä—å–µ—Ä –∏ –î–æ—Å—Ç–∞–≤–∫–∞ ‚Äî –∑–∞—Ä–∞–±–∞—Ç—ã–≤–∞–π –±–æ–ª—å—à–µ, –ø–æ–∫–∞ –≤–µ–ª–æ—Å–∏–ø–µ–¥ –æ–∫—É–ø–∞–µ—Ç—Å—è —Å–∞–º!\n"
            "<b>üì¶ –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–æ ‚Äî —É—Å–ø–µ–π –∑–∞–±—Ä–∞—Ç—å –ø–µ—Ä–≤—ã–º!</b>\n"
            "<b>üìû –ö–æ–Ω—Ç–∞–∫—Ç –¥–ª—è –∞—Ä–µ–Ω–¥—ã:</b> +7 700 808 80 60"
        )
        await callback_query.message.answer(rent_text, parse_mode="HTML")
    else:
        whatsapp_link = "https://wa.me/+77008088060"
        help_text = (
            "<b>–ù—É–∂–Ω–∞ –ø–æ–º–æ—â—å —Å –≤–µ–ª–æ—Å–∏–ø–µ–¥–æ–º? üö¥‚Äç‚ôÇÔ∏è</b>\n"
            "–°–≤—è–∂–∏—Ç–µ—Å—å —Å –Ω–∞—à–µ–π —Å–ª—É–∂–±–æ–π –ø–æ–¥–¥–µ—Ä–∂–∫–∏ –≤ WhatsApp –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ —Ä–µ—à–µ–Ω–∏—è –ª—é–±—ã—Ö –≤–æ–ø—Ä–æ—Å–æ–≤!"
        )
        keyboard = InlineKeyboardMarkup()
        keyboard.add(InlineKeyboardButton("–ü–µ—Ä–µ–π—Ç–∏ –≤ WhatsApp", url=whatsapp_link))
        await callback_query.message.answer(help_text, parse_mode="HTML", reply_markup=keyboard)

# Run Flask and bot concurrently
if __name__ == '__main__':
    from threading import Thread
    flask_thread = Thread(target=lambda: app.run(host='0.0.0.0', port=int(os.getenv("PORT", 5000))))
    flask_thread.start()
    executor.start_polling(dp, skip_updates=True)